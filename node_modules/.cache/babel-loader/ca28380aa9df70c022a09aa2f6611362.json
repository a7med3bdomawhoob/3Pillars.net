{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namaa\\\\Desktop\\\\ahmed abdo_addressbook\\\\Front\\\\src\\\\Components\\\\Department\\\\Department.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormWithGrid = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    departmentName: \"\"\n  });\n  const [dataGrid, setDataGrid] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [showModal, setShowModal] = useState(false); // Fetch data when the component loads\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://localhost:7164/api/Department\");\n        console.log(response);\n        setDataGrid(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        alert(\"Failed to fetch data. Please try again.\");\n      }\n    };\n\n    fetchData();\n  }, []); // Handle form input changes\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }; // Handle form submission\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!formData.departmentName.trim()) {\n      alert(\"Department name is required!\");\n      return;\n    }\n\n    try {\n      if (editingId) {\n        console.log(editingId);\n        console.log(formData); // Update existing entry\n\n        await axios.put(`https://localhost:7164/api/Department?id=${editingId}`, {\n          departmentName: formData[\"departmentName\"],\n          id: editingId\n        }); // Fetch updated data from API\n\n        const response = await axios.get(\"https://localhost:7164/api/Department\");\n        setDataGrid(response.data);\n        setEditingId(null);\n      } else {\n        // Add new entry\n        await axios.post(\"https://localhost:7164/api/Department\", formData); // Fetch updated data from API\n\n        const response = await axios.get(\"https://localhost:7164/api/Department\");\n        setDataGrid(response.data);\n      } // Clear form and close modal\n\n\n      setFormData({\n        departmentName: \"\"\n      });\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Error occurred while saving:\", error);\n      alert(\"Failed to save the data. Please try again.\");\n    }\n  }; // Handle edit action\n\n\n  const handleEdit = id => {\n    const itemToEdit = dataGrid.find(item => item.id === id);\n    setFormData({\n      departmentName: itemToEdit.departmentName\n    });\n    setEditingId(id);\n    setShowModal(true); // Open modal\n  }; // Handle delete action\n\n\n  const handleDelete = async id => {\n    // Show confirmation popup\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n\n    if (!confirmDelete) {\n      return; // Exit if the user cancels the deletion\n    }\n\n    try {\n      console.log(\"Deleting ID:\", id);\n      await axios.delete(`https://localhost:7164/api/Department/DeleteDepartmentByDepartmentId?Id=${id}`); // Fetch updated data from API\n\n      const response = await axios.get(\"https://localhost:7164/api/Department\");\n      setDataGrid(response.data);\n      alert(\"Item deleted successfully.\");\n    } catch (error) {\n      console.error(\"Error occurred while deleting:\", error);\n      alert(\"Failed to delete the data. Please try again.\");\n    }\n  }; // Handle modal close\n\n\n  const handleClose = () => {\n    setShowModal(false);\n    setFormData({\n      departmentName: \"\"\n    });\n    setEditingId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Department Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas  fa-horse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataGrid.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-info\",\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-info\",\n            children: item.departmentName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning btn-sm me-2\",\n              onClick: () => handleEdit(item.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDelete(item.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingId ? \"Edit Entry\" : \"Add Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"departmentName\",\n              className: \"form-label text-info\",\n              children: \"Department Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"departmentName\",\n              name: \"departmentName\",\n              value: formData.departmentName,\n              onChange: handleChange,\n              className: \"form-control\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: editingId ? \"Update\" : \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: () => setShowModal(true),\n      children: \"Add New Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormWithGrid, \"1QrCc3X1+F2RxYWB6FuremSa8tI=\");\n\n_c = FormWithGrid;\nexport default FormWithGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormWithGrid\");","map":{"version":3,"sources":["C:/Users/namaa/Desktop/ahmed abdo_addressbook/Front/src/Components/Department/Department.jsx"],"names":["React","useState","useEffect","Modal","Button","axios","FormWithGrid","formData","setFormData","departmentName","dataGrid","setDataGrid","editingId","setEditingId","showModal","setShowModal","fetchData","response","get","console","log","data","error","alert","handleChange","e","name","value","target","handleSubmit","preventDefault","trim","put","id","post","handleEdit","itemToEdit","find","item","handleDelete","confirmDelete","window","confirm","delete","handleClose","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nconst FormWithGrid = () => {\n    const [formData, setFormData] = useState({ departmentName: \"\" });\n    const [dataGrid, setDataGrid] = useState([]);\n    const [editingId, setEditingId] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    // Fetch data when the component loads\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(\"https://localhost:7164/api/Department\");\n                console.log(response);\n                setDataGrid(response.data);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                alert(\"Failed to fetch data. Please try again.\");\n            }\n        };\n        fetchData();\n    }, []);\n\n    // Handle form input changes\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!formData.departmentName.trim()) {\n            alert(\"Department name is required!\");\n            return;\n        }\n\n        try {\n            if (editingId) {\n                console.log(editingId);\n                console.log(formData);\n                // Update existing entry\n                await axios.put(`https://localhost:7164/api/Department?id=${editingId}`, { departmentName: formData[\"departmentName\"], id: editingId });\n                // Fetch updated data from API\n                const response = await axios.get(\"https://localhost:7164/api/Department\");\n                setDataGrid(response.data);\n\n                setEditingId(null);\n            } else {\n                // Add new entry\n                await axios.post(\"https://localhost:7164/api/Department\", formData);\n\n                // Fetch updated data from API\n                const response = await axios.get(\"https://localhost:7164/api/Department\");\n                setDataGrid(response.data);\n            }\n\n            // Clear form and close modal\n            setFormData({ departmentName: \"\" });\n            setShowModal(false);\n        } catch (error) {\n            console.error(\"Error occurred while saving:\", error);\n            alert(\"Failed to save the data. Please try again.\");\n        }\n    };\n    // Handle edit action\n    const handleEdit = (id) => {\n        const itemToEdit = dataGrid.find((item) => item.id === id);\n        setFormData({ departmentName: itemToEdit.departmentName });\n        setEditingId(id);\n        setShowModal(true); // Open modal\n    };\n    // Handle delete action\n    const handleDelete = async (id) => {\n        // Show confirmation popup\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n        if (!confirmDelete) {\n            return; // Exit if the user cancels the deletion\n        }\n        try {\n            console.log(\"Deleting ID:\", id);\n            await axios.delete(`https://localhost:7164/api/Department/DeleteDepartmentByDepartmentId?Id=${id}`);\n\n            // Fetch updated data from API\n            const response = await axios.get(\"https://localhost:7164/api/Department\");\n            setDataGrid(response.data);\n            alert(\"Item deleted successfully.\");\n        } catch (error) {\n            console.error(\"Error occurred while deleting:\", error);\n            alert(\"Failed to delete the data. Please try again.\");\n        }\n    };\n    // Handle modal close\n    const handleClose = () => {\n        setShowModal(false);\n        setFormData({ departmentName: \"\" });\n        setEditingId(null);\n    };\n    \n    return (\n        <div className=\"container mt-5\">\n            <h2 className=\"text-center mb-4\">Department Form</h2>\n\n            {/* Grid Section */}\n            <h3 className=\"text-center mb-3\"><i className=\"fas  fa-horse\"></i></h3>\n            <table className=\"table table-bordered\">\n                <thead className=\"table-dark\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Department Name</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {dataGrid.map((item) => (\n                        <tr key={item.id}>\n                            <td className=\"bg-info\">{item.id}</td>\n                            <td className=\"bg-info\">{item.departmentName}</td>\n                            <td>\n                                <button\n                                    className=\"btn btn-warning btn-sm me-2\"\n                                    onClick={() => handleEdit(item.id)}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    className=\"btn btn-danger btn-sm\"\n                                    onClick={() => handleDelete(item.id)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {/* Modal Section */}\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{editingId ? \"Edit Entry\" : \"Add Entry\"}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"departmentName\" className=\"form-label text-info\">Department Name:</label>\n                            <input\n                                type=\"text\"\n                                id=\"departmentName\"\n                                name=\"departmentName\"\n                                value={formData.departmentName}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                required\n                            />\n                        </div>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {editingId ? \"Update\" : \"Add\"}\n                        </Button>\n                    </form>\n                </Modal.Body>\n            </Modal>\n\n            {/* Add Button */}\n            <button className=\"btn btn-primary mt-3\" onClick={() => setShowModal(true)}>\n                Add New Entry\n            </button>\n        </div>\n    );\n};\n\nexport default FormWithGrid;\n"]},"metadata":{},"sourceType":"module"}