{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namaa\\\\Desktop\\\\ahmed abdo_addressbook\\\\Front\\\\src\\\\Components\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport joi from 'joi';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  let [data, setData] = useState({\n    userName: '',\n    // role: '',\n    email: '',\n    password: ''\n  });\n  let [message, setMessage] = useState('');\n  let [validateError, setvalidateerror] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let navigate = useNavigate();\n\n  function routingNavigate() {\n    navigate('/login');\n  }\n\n  async function submitFormData(e) {\n    e.preventDefault();\n    setLoading(true);\n    let validationResult = validationForm();\n\n    if (validationResult.error) {\n      setLoading(false);\n      setvalidateerror(validationResult.error.details);\n    } else {\n      let user = await axios.post(\"https://localhost:7164/api/Account/register\", data);\n\n      if (user.data.message == 'success') {\n        setLoading(false);\n        setMessage(user.data.message);\n        routingNavigate();\n        navigate('/login');\n      } else {\n        setLoading(false);\n        setMessage(user.data.message);\n      }\n    }\n\n    console.log(validationResult);\n  }\n\n  function validationForm() {\n    const schema = joi.object({\n      userName: joi.string().required().min(3).max(20).pattern(/^[a-zA-Z0-9_]+$/) // Regex to allow letters, numbers, and underscores only\n      .messages({\n        'string.pattern.base': 'Username can only contain letters, numbers, and underscores (_), no spaces allowed. like(ahmed_abdo_mawhoob)',\n        'string.min': 'Username must be at least 3 characters long.',\n        'string.max': 'Username must be at most 20 characters long.'\n      }),\n      //  role: joi.string().required().min(3).max(20),\n      email: joi.string().required().email({\n        tlds: {\n          allow: ['com', 'net']\n        }\n      }),\n      password: joi.string().pattern(/^[A-Z]/) // Regex to ensure the password starts with an uppercase letter\n      .required().messages({\n        'string.pattern.base': 'Password must start with an uppercase letter.'\n      })\n    });\n    return schema.validate(data, {\n      abortEarly: false\n    });\n  }\n\n  function getData(e) {\n    let newData = { ...data\n    };\n    let x = e.target.name;\n    newData[x] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5 w-75 m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white my-3\",\n        children: \"Registeration Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), validateError.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 47\n      }, this)), message != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFormData,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_group my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            children: \"userName :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: getData,\n            className: \"form-control \",\n            type: \"text\",\n            name: \"userName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_group my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: getData,\n            className: \"form-control \",\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_group my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: getData,\n            className: \"form-control \",\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-end btn-info btn\",\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-spinner fa-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 89\n          }, this) : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clearfix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"eHNx09LpS+jV6Jdc4RPdsd76ngQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/namaa/Desktop/ahmed abdo_addressbook/Front/src/Components/Register/Register.jsx"],"names":["axios","React","useState","joi","useNavigate","Register","data","setData","userName","email","password","message","setMessage","validateError","setvalidateerror","loading","setLoading","navigate","routingNavigate","submitFormData","e","preventDefault","validationResult","validationForm","error","details","user","post","console","log","schema","object","string","required","min","max","pattern","messages","tlds","allow","validate","abortEarly","getData","newData","x","target","name","value","map"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport joi from 'joi';\nimport { useNavigate } from 'react-router-dom';\nexport default function Register() {\n\n    let [data, setData] = useState({\n        userName: '',\n        // role: '',\n        email: '',\n        password: '',\n    })\n\n    let [message, setMessage] = useState('');\n    let [validateError, setvalidateerror] = useState([])\n    let [loading, setLoading] = useState(false)\n    let navigate = useNavigate();\n    function routingNavigate() {\n        navigate('/login')\n    }\n    async function submitFormData(e) {\n        e.preventDefault();\n        setLoading(true)\n        let validationResult = validationForm();\n        if (validationResult.error) {\n            setLoading(false)\n            setvalidateerror(validationResult.error.details)\n\n        }\n        else {\n            let user = await axios.post(\"https://localhost:7164/api/Account/register\", data);\n            if (user.data.message == 'success') {\n                setLoading(false)\n                setMessage(user.data.message)\n                routingNavigate()\n                navigate('/login');\n            }\n            else {\n                setLoading(false)\n                setMessage(user.data.message)\n            }\n        }\n        console.log(validationResult)\n    }\n    function validationForm() {\n        const schema = joi.object({\n            userName: joi.string()\n                .required()\n                .min(3)\n                .max(20)\n                .pattern(/^[a-zA-Z0-9_]+$/)  // Regex to allow letters, numbers, and underscores only\n                .messages({\n                    'string.pattern.base': 'Username can only contain letters, numbers, and underscores (_), no spaces allowed. like(ahmed_abdo_mawhoob)',\n                    'string.min': 'Username must be at least 3 characters long.',\n                    'string.max': 'Username must be at most 20 characters long.',\n                }),\n            //  role: joi.string().required().min(3).max(20),\n            email: joi.string().required().email({ tlds: { allow: ['com', 'net'] } }),\n            password: joi.string()\n                .pattern(/^[A-Z]/)  // Regex to ensure the password starts with an uppercase letter\n                .required()\n                .messages({\n                    'string.pattern.base': 'Password must start with an uppercase letter.',\n                }),\n        })\n        return schema.validate(data, { abortEarly: false })\n    }\n\n    function getData(e) {\n        let newData = { ...data }\n        let x = e.target.name\n        newData[x] = e.target.value\n        setData(newData)\n        console.log(newData)\n    }\n\n    return (\n        <>\n            <div className=\"container my-5 w-75 m-auto\">\n                <h1 className='text-white my-3'>Registeration Form</h1>\n                {validateError.map((error) => <div className='alert alert-danger'>{error.message}</div>)}\n                {message != '' ? <div className=\"alert alert-success\">{message}</div> : ''}\n                <form onSubmit={submitFormData}>\n                    <div className=\"input_group my-2\">\n                        <label htmlFor=\"userName\">userName :</label>\n                        <input onChange={getData} className='form-control ' type=\"text\" name='userName' />\n                    </div>\n                    {/* <div className=\"input_group my-2\">\n                        <label htmlFor=\"role\">role :</label>\n                        <input onChange={getData} className='form-control ' type=\"number\" name='role' />\n                    </div> */}\n                    <div className=\"input_group my-2\">\n                        <label htmlFor=\"email\">email :</label>\n                        <input onChange={getData} className='form-control ' type=\"email\" name='email' />\n                    </div>\n                    <div className=\"input_group my-2\">\n                        <label htmlFor=\"password\">password :</label>\n                        <input onChange={getData} className='form-control ' type=\"password\" name='password' />\n                    </div>\n\n                    <button className='float-end btn-info btn' type='submit'>{loading ? <i className='fa fa-spinner fa-spin'></i> : 'Register'}</button>\n                    <div className=\"clearfix\"></div>\n\n                </form>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}