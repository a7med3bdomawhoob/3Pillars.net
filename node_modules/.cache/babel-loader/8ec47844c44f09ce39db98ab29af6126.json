{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namaa\\\\Desktop\\\\ahmed abdo_addressbook\\\\Front\\\\src\\\\Components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport joi from 'joi';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setUserData\n  } = _ref;\n  let [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  let [message, setMessage] = useState('');\n  let [validateError, setvalidateerror] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let navigate = useNavigate();\n\n  function routingNavigate() {\n    navigate('/home');\n  }\n\n  async function submitFormData(e) {\n    e.preventDefault();\n    setLoading(true);\n    let validationResult = validationForm();\n\n    if (validationResult.error) {\n      setLoading(false); // alert('error')\n\n      setvalidateerror(validationResult.error.details);\n      console.log(\"ErrrrrrorMessage\");\n    } else {\n      console.log(\"TrueValidationForYouAhmed\");\n      let user = await axios.post(\"https://localhost:7164/api/Account/login\", data);\n      console.log(user);\n      console.log(user.data.token);\n\n      if (user.data.token) {\n        setLoading(false);\n        console.log(\"Succcccesssss\");\n        console.log(user.data.token);\n        localStorage.setItem('token', user.data.token);\n        setUserData(); //هتتنفذ هناك مش هنا\n\n        setMessage(user.data.message);\n        console.log(user.data);\n        routingNavigate();\n      } else {\n        console.log(\"ErrrrrrorMessage\");\n        console.log(user.data.message);\n        setLoading(false);\n        setMessage(user.data.message);\n      }\n    } // console.log(validationResult)\n\n  }\n\n  function validationForm() {\n    const schema = joi.object({\n      email: joi.string().required().email({\n        tlds: {\n          allow: ['com', 'net']\n        }\n      }),\n      password: joi.string().pattern(/^[A-Z]/) // Regex to ensure the password starts with an uppercase letter\n      .required().messages({\n        'string.pattern.base': 'Password must start with an uppercase letter.'\n      })\n    });\n    return schema.validate(data, {\n      abortEarly: false\n    });\n  }\n\n  function getData(e) {\n    let newData = { ...data\n    };\n    let x = e.target.name;\n    newData[x] = e.target.value;\n    setData(newData); // console.log(newData)\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5 w-75 m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white my-3\",\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), validateError.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 47\n      }, this)), message != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFormData,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_group my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: getData,\n            className: \"form-control \",\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_group my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: getData,\n            className: \"form-control \",\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-end btn-info btn \",\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \" spinner-border text-danger bg-warning \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 90\n          }, this) : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clearfix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"0Z820yJ1pJg14+cb3x5NxROTaFo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/namaa/Desktop/ahmed abdo_addressbook/Front/src/Components/Login/Login.jsx"],"names":["React","useState","useNavigate","joi","axios","Login","setUserData","data","setData","email","password","message","setMessage","validateError","setvalidateerror","loading","setLoading","navigate","routingNavigate","submitFormData","e","preventDefault","validationResult","validationForm","error","details","console","log","user","post","token","localStorage","setItem","schema","object","string","required","tlds","allow","pattern","messages","validate","abortEarly","getData","newData","x","target","name","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport joi from 'joi'\nimport axios from 'axios'\nexport default function Login({ setUserData }) {\n    let [data, setData] = useState({\n\n        email: '',\n        password: '',\n    })\n    let [message, setMessage] = useState('');\n    let [validateError, setvalidateerror] = useState([])\n    let [loading, setLoading] = useState(false)\n\n    let navigate = useNavigate();\n    function routingNavigate() {\n        navigate('/home')\n    }\n    async function submitFormData(e) {\n        e.preventDefault();\n        setLoading(true)\n\n        let validationResult = validationForm();\n        if (validationResult.error) {\n            setLoading(false);\n            // alert('error')\n            setvalidateerror(validationResult.error.details);\n            console.log(\"ErrrrrrorMessage\");\n        }\n        else {\n            console.log(\"TrueValidationForYouAhmed\");\n            let user = await axios.post(\"https://localhost:7164/api/Account/login\", data);\n            console.log(user);\n            console.log(user.data.token);\n            if (user.data.token) {\n                setLoading(false);\n                console.log(\"Succcccesssss\");\n                console.log(user.data.token);\n                localStorage.setItem('token', user.data.token)\n                setUserData();//هتتنفذ هناك مش هنا\n                setMessage(user.data.message)\n                console.log(user.data)\n                routingNavigate()\n            }\n            else {\n                console.log(\"ErrrrrrorMessage\");\n                console.log(user.data.message);\n                setLoading(false)\n                setMessage(user.data.message)\n            }\n        }\n        // console.log(validationResult)\n    }\n    function validationForm() {\n        const schema = joi.object({\n            email: joi.string().required().email({ tlds: { allow: ['com', 'net'] } }),\n            password: joi.string()\n                .pattern(/^[A-Z]/)  // Regex to ensure the password starts with an uppercase letter\n                .required()\n                .messages({\n                    'string.pattern.base': 'Password must start with an uppercase letter.',\n                }),\n        })\n        return schema.validate(data, { abortEarly: false })\n    }\n\n    function getData(e) {\n        let newData = { ...data }\n        let x = e.target.name\n        newData[x] = e.target.value\n        setData(newData)\n        // console.log(newData)\n    }\n\n    return (\n        <>\n            <div className=\"container my-5 w-75 m-auto\">\n                <h1 className='text-white my-3'>Login Form</h1>\n                {validateError.map((error) => <div className='alert alert-danger'>{error.message}</div>)}\n                {message != '' ? <div className=\"alert alert-danger\">{message}</div> : ''}\n                <form onSubmit={submitFormData}>\n                    <div className=\"input_group my-2\">\n                        <label htmlFor=\"email\">email :</label>\n                        <input onChange={getData} className='form-control ' type=\"email\" name='email' />\n                    </div>\n                    <div className=\"input_group my-2\">\n                        <label htmlFor=\"password\">password :</label>\n                        <input onChange={getData} className='form-control ' type=\"password\" name='password' />\n                    </div>\n\n                    <button className='float-end btn-info btn ' type='submit'>{loading ? <i className=\" spinner-border text-danger bg-warning \"></i> : 'Login'}</button>\n                    <div className=\"clearfix\"></div>\n\n                </form>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}